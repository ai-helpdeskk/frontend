name: Frontend CD

on:
  workflow_run:
    workflows: ["Frontend CI"]
    branches: [main]
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy Frontend
    runs-on: [self-hosted]
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Verify kubectl access
      run: |
        kubectl cluster-info
        kubectl get nodes
    
    - name: Wait for infrastructure dependencies
      run: |
        echo "‚è≥ Waiting for infrastructure to be ready..."
        
        timeout 300 bash -c 'until kubectl get namespace bedrock-chat 2>/dev/null; do echo "Waiting for namespace..."; sleep 10; done'
        timeout 300 bash -c 'until kubectl get deployment api-gateway -n bedrock-chat 2>/dev/null; do echo "Waiting for API Gateway..."; sleep 10; done'
        kubectl wait --for=condition=available deployment/api-gateway -n bedrock-chat --timeout=300s || echo "API Gateway not ready yet, continuing..."
        
        echo "‚úÖ Infrastructure dependencies verified!"
    
    - name: Get latest image tag
      id: get-image
      run: |
        IMAGE_TAG="ghcr.io/${{ github.repository_owner }}/bedrock-chat-frontend:latest"
        echo "image-tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
        echo "Using image: $IMAGE_TAG"
    
    - name: Update deployment manifests
      run: |
        cd k8s
        sed -i "s|image: ghcr.io/.*/bedrock-chat-frontend:.*|image: ${{ steps.get-image.outputs.image-tag }}|g" deployment.yaml
        
        echo "Updated deployment.yaml:"
        grep "image:" deployment.yaml
    
    - name: Deploy Frontend
      run: |
        echo "üöÄ Deploying Frontend to Kubernetes..."
        
        # Apply all k8s manifests (includes both ClusterIP service and NodePort service)
        kubectl apply -f k8s/ -n bedrock-chat
        
        echo "‚è≥ Waiting for deployment rollout..."
        kubectl rollout status deployment/frontend -n bedrock-chat --timeout=300s
        
        echo "‚úÖ Frontend deployed successfully!"
    
    - name: Verify deployment
      run: |
        echo "üîç Verifying Frontend deployment..."
        
        kubectl get pods -n bedrock-chat -l app=frontend -o wide
        kubectl get service frontend -n bedrock-chat
        
        # Check if NodePort service exists and get the port
        if kubectl get service frontend-nodeport -n bedrock-chat 2>/dev/null; then
          NODEPORT=$(kubectl get service frontend-nodeport -n bedrock-chat -o jsonpath='{.spec.ports[0].nodePort}')
          echo "üåê Frontend accessible via NodePort: $NODEPORT"
          echo "üîó Access URL: http://<your-node-ip>:$NODEPORT"
        fi
        
        kubectl get ingress -n bedrock-chat || echo "No ingress configured"
        kubectl logs -n bedrock-chat -l app=frontend --tail=10
        
        kubectl run test-frontend-$RANDOM --image=curlimages/curl --rm -i --restart=Never -n bedrock-chat -- \
          curl -f http://frontend.bedrock-chat.svc.cluster.local:3000/health || echo "Health check completed"
        
        echo "‚úÖ Frontend verification completed!"
    
    - name: Deployment summary
      run: |
        echo "üéâ **Frontend Deployment Successful!**"
        echo ""
        echo "üåê **Access Methods:**"
        
        # Check NodePort
        if kubectl get service frontend-nodeport -n bedrock-chat 2>/dev/null; then
          NODEPORT=$(kubectl get service frontend-nodeport -n bedrock-chat -o jsonpath='{.spec.ports[0].nodePort}')
          NODE_IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="ExternalIP")].address}')
          if [ -z "$NODE_IP" ]; then
            NODE_IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}')
          fi
          echo "1. **NodePort Access**: http://$NODE_IP:$NODEPORT"
        fi
        
        echo "2. **Port Forward**: kubectl port-forward svc/frontend 3000:3000 -n bedrock-chat"
        echo "3. **Cluster IP**: http://frontend.bedrock-chat.svc.cluster.local:3000"
