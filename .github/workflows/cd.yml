# .github/workflows/cd.yml
name: CD - Deploy Frontend

on:
  repository_dispatch:
    types: [deploy-frontend]

env:
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout deployment repository
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository_owner }}/k8s-manifests
        token: ${{ secrets.MANIFEST_REPO_TOKEN }}
        
    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'
        
    - name: Configure kubectl
      run: |
        echo "${{ env.KUBE_CONFIG_DATA }}" | base64 -d > kubeconfig
        export KUBECONFIG=kubeconfig
        kubectl config current-context
        
    - name: Deploy to Kubernetes
      run: |
        export KUBECONFIG=kubeconfig
        
        # Determine environment
        if [ "${{ github.event.client_payload.environment }}" = "production" ]; then
          NAMESPACE="bedrock-chat-v2"
        else
          NAMESPACE="bedrock-chat-staging"
        fi
        
        echo "Deploying frontend to $NAMESPACE"
        
        # Apply the deployment
        kubectl apply -f k8s/deployments/frontend-deployment.yaml -n $NAMESPACE
        
        # Wait for rollout to complete
        kubectl rollout status deployment/frontend -n $NAMESPACE --timeout=300s
        
        # Verify deployment
        kubectl get pods -l app=frontend -n $NAMESPACE
        
    - name: Health check
      run: |
        export KUBECONFIG=kubeconfig
        
        if [ "${{ github.event.client_payload.environment }}" = "production" ]; then
          NAMESPACE="bedrock-chat-v2"
        else
          NAMESPACE="bedrock-chat-staging"
        fi
        
        # Wait for service to be ready
        sleep 30
        
        # Test frontend health
        kubectl exec -n $NAMESPACE deployment/frontend -- wget -qO- --timeout=10 http://localhost:3000/health || exit 1
        
        echo "Frontend deployment successful and health check passed!"
